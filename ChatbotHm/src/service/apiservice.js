const https = require('https');

/**
 * CONFIGURACI√ìN DE CREDENCIALES
 * Configuraci√≥n de tokens y IDs para la API de WhatsApp Business
 */
require('dotenv').config();
const ACCESS_TOKEN = process.env.ACCESS_TOKEN;
const PHONE_NUMBER_ID = process.env.PHONE_NUMBER_ID;


/**
 * INFORMACI√ìN DE LA EMPRESA HM INSURANCE BROKERS
 * Informaci√≥n general de la empresa, horarios, oficinas y asesores
 */
const COMPANY_INFO = {
    name: 'HM Insurance Brokers',
    website: 'www.hmbrokers.mx',
    city: 'Saltillo, Coahuila',
    schedule: {
        mondayToThursday: '8:30 a.m. a 2:00 p.m. y 3:30 p.m. a 6:00 p.m.',
        friday: '8:30 a.m. a 2:00 p.m. y 3:30 p.m. a 5:00 p.m.',
        online: '24/7'
    },
    offices: {
        musa: { 
            name: 'HM Insurance Brokers - Oficina Musa', 
            latitude: 25.4680278, 
            longitude: -100.9627102, 
            address: 'Saltillo, Coahuila'
        },
        plazaLasVigas: { 
            name: 'HM Insurance Brokers - Plaza Las Vigas', 
            latitude: 25.4584206, 
            longitude: -100.9839111, 
            address: 'Saltillo, Coahuila'
        }
    },
    // Lista unificada de asesores
    advisors: [
        {
            name: 'Karen Ottosen',
            phone: '528121234567'
        },
        {
            name: 'Selene Salazar',
            phone: '528127654321'
        },
        {
            name: 'Rocio de Hoyos',
            phone: '528129876543'
        },
        {
            name: 'Andres Castillo',
            phone: '528123456789'
        }
    ]
};

// Estado de conversaciones y estados de flujo
const userSessions = new Map();

// Estados posibles para el flujo de consulta de p√≥liza
const STATES = {
    IDLE: 'IDLE',
    WAITING_POLIZA_CHOICE: 'WAITING_POLIZA_CHOICE',
    WAITING_NAME: 'WAITING_NAME',
    WAITING_CURP: 'WAITING_CURP',
    WAITING_BIRTHDATE: 'WAITING_BIRTHDATE',
    WAITING_INSURANCE_TYPE: 'WAITING_INSURANCE_TYPE'
};

// Funci√≥n para obtener o crear sesi√≥n de usuario
function getUserSession(phoneNumber) {
    if (!userSessions.has(phoneNumber)) {
        userSessions.set(phoneNumber, {
            state: STATES.IDLE,
            userData: {},
            attempts: 0,
            lastAttempt: null
        });
    }
    return userSessions.get(phoneNumber);
}

// Funci√≥n para actualizar estado de sesi√≥n
function updateUserSession(phoneNumber, newState, userData = {}) {
    const session = getUserSession(phoneNumber);
    session.state = newState;
    session.userData = { ...session.userData, ...userData };
    userSessions.set(phoneNumber, session);
}

/**
 * FUNCI√ìN PRINCIPAL PARA ENVIAR MENSAJES (Formato original mejorado)
 * Usa el mismo formato que tu c√≥digo anterior pero con mejoras
 */
function SendWhatsappMessage(text, number) {
    const originalText = text;
    text = text.toLowerCase();
    
    // Obtener sesi√≥n del usuario
    const session = getUserSession(number);
    
    // Determinar respuesta basada en el mensaje y estado actual
    let data;
    
    // Manejar estados del flujo de consulta de p√≥liza
    if (session.state === STATES.WAITING_POLIZA_CHOICE) {
        if (text === "1a") {
            data = JSON.stringify({
                messaging_product: "whatsapp",
                to: "528135212365",
                type: "text",
                text: {
                    preview_url: false,
                    body: "üî¢ Por favor, ingresa tu n√∫mero de p√≥liza:"
                }
            });
            updateUserSession(number, STATES.IDLE); // Por ahora regresamos a IDLE ya que no implementaremos el flujo completo de 1A
        } else if (text === "1b") {
            data = JSON.stringify({
                messaging_product: "whatsapp",
                to: "528135212365",
                type: "text",
                text: {
                    preview_url: false,
                    body: "üë§ Para ayudarte a encontrar tu p√≥liza, necesito algunos datos.\n\nPor favor, ingresa tu *nombre completo* (como aparece en tu identificaci√≥n):"
                }
            });
            updateUserSession(number, STATES.WAITING_NAME);
        } else {
            data = JSON.stringify({
                messaging_product: "whatsapp",
                to: "528135212365",
                type: "text",
                text: {
                    preview_url: false,
                    body: "‚ùå Opci√≥n no v√°lida. Por favor selecciona:\n\nüî¢ *1A* - S√© mi n√∫mero de p√≥liza\n‚ùì *1B* - No s√© mi n√∫mero de p√≥liza"
                }
            });
        }
        return sendRequest(data, number, text);
    }
    
    if (session.state === STATES.WAITING_NAME) {
        if (originalText.trim().length < 5) {
            data = JSON.stringify({
                messaging_product: "whatsapp",
                to: "528135212365",
                type: "text",
                text: {
                    preview_url: false,
                    body: "‚ùå Por favor ingresa tu nombre completo (m√≠nimo 5 caracteres):"
                }
            });
        } else {
            data = JSON.stringify({
                messaging_product: "whatsapp",
                to: "528135212365",
                type: "text",
                text: {
                    preview_url: false,
                    body: "üìã Perfecto. Ahora necesito tu *CURP* (Clave √önica de Registro de Poblaci√≥n):\n\nEjemplo: ABCD123456HDFGHI01"
                }
            });
            updateUserSession(number, STATES.WAITING_CURP, { fullName: originalText.trim() });
        }
        return sendRequest(data, number, text);
    }
    
    if (session.state === STATES.WAITING_CURP) {
        const curpPattern = /^[A-Z]{4}[0-9]{6}[HM][A-Z]{5}[0-9]{2}$/;
        if (!curpPattern.test(originalText.toUpperCase())) {
            data = JSON.stringify({
                messaging_product: "whatsapp",
                to: "528135212365",
                type: "text",
                text: {
                    preview_url: false,
                    body: "‚ùå CURP no v√°lido. Debe tener 18 caracteres.\n\nEjemplo: ABCD123456HDFGHI01\n\nPor favor ingresa tu CURP nuevamente:"
                }
            });
        } else {
            data = JSON.stringify({
                messaging_product: "whatsapp",
                to: "528135212365",
                type: "text",
                text: {
                    preview_url: false,
                    body: "üìÖ Excelente. Ahora ingresa tu *fecha de nacimiento*:\n\nFormato: DD/MM/AAAA\nEjemplo: 15/08/1985"
                }
            });
            updateUserSession(number, STATES.WAITING_BIRTHDATE, { curp: originalText.toUpperCase() });
        }
        return sendRequest(data, number, text);
    }
    
    if (session.state === STATES.WAITING_BIRTHDATE) {
        const datePattern = /^(0[1-9]|[12][0-9]|3[01])\/(0[1-9]|1[0-2])\/\d{4}$/;
        if (!datePattern.test(originalText)) {
            data = JSON.stringify({
                messaging_product: "whatsapp",
                to: "528135212365",
                type: "text",
                text: {
                    preview_url: false,
                    body: "‚ùå Formato de fecha incorrecto.\n\nUsa el formato: DD/MM/AAAA\nEjemplo: 15/08/1985\n\nPor favor ingresa tu fecha de nacimiento:"
                }
            });
        } else {
            data = JSON.stringify({
                messaging_product: "whatsapp",
                to: "528135212365",
                type: "text",
                text: {
                    preview_url: false,
                    body: "üõ°Ô∏è Por √∫ltimo, ¬øqu√© tipo de seguro tienes con nosotros?\n\nSelecciona escribiendo el n√∫mero:\n\n1Ô∏è‚É£ Seguro de Auto\n2Ô∏è‚É£ Seguro de Vida\n3Ô∏è‚É£ Gastos M√©dicos Mayores\n4Ô∏è‚É£ Seguro Empresarial\n5Ô∏è‚É£ Otro tipo de seguro"
                }
            });
            updateUserSession(number, STATES.WAITING_INSURANCE_TYPE, { birthDate: originalText });
        }
        return sendRequest(data, number, text);
    }
    
    if (session.state === STATES.WAITING_INSURANCE_TYPE) {
        const insuranceTypes = {
            '1': 'Seguro de Auto',
            '2': 'Seguro de Vida',
            '3': 'Gastos M√©dicos Mayores',
            '4': 'Seguro Empresarial',
            '5': 'Otro tipo de seguro'
        };
        
        if (!insuranceTypes[text]) {
            data = JSON.stringify({
                messaging_product: "whatsapp",
                to: "528135212365",
                type: "text",
                text: {
                    preview_url: false,
                    body: "‚ùå Opci√≥n no v√°lida. Selecciona el n√∫mero correspondiente:\n\n1Ô∏è‚É£ Seguro de Auto\n2Ô∏è‚É£ Seguro de Vida\n3Ô∏è‚É£ Gastos M√©dicos Mayores\n4Ô∏è‚É£ Seguro Empresarial\n5Ô∏è‚É£ Otro tipo de seguro"
                }
            });
        } else {
            // Aqu√≠ ir√° la consulta a la base de datos en el futuro
            const userData = session.userData;
            updateUserSession(number, STATES.WAITING_INSURANCE_TYPE, { insuranceType: insuranceTypes[text] });
            
            data = JSON.stringify({
                messaging_product: "whatsapp",
                to: "528135212365",
                type: "text",
                text: {
                    preview_url: false,
                    body: `‚úÖ *Datos recibidos correctamente:*\n\nüë§ Nombre: ${userData.fullName}\nüìã CURP: ${userData.curp}\nüìÖ Fecha de nacimiento: ${userData.birthDate}\nüõ°Ô∏è Tipo de seguro: ${insuranceTypes[text]}\n\nüîç *Procesando b√∫squeda de p√≥liza...*\n\n‚è≥ En breve un asesor verificar√° tus datos y te proporcionar√° la informaci√≥n de tu p√≥liza.\n\nüìû Tambi√©n puedes contactar directamente a un asesor escribiendo *6* en el men√∫ principal.`
                }
            });
            
            // Reiniciar sesi√≥n despu√©s de completar el proceso
            updateUserSession(number, STATES.IDLE, {});
        }
        return sendRequest(data, number, text);
    }
    
    if (text.includes("hola") || text.includes("hi") || text.includes("buenos") || text.includes("buenas")) {
        data = JSON.stringify({
            messaging_product: "whatsapp",
            to: "528135212365",//numero de telefono local de prueba no es el definitivo 
            type: "text",
            text: {
                preview_url: false,
                body: `üîíüíô ¬°Hola! Bienvenido al bot *${COMPANY_INFO.name}*.\n\nEstamos para ayudarte con todo lo relacionado a tus seguros.\n\nVisita nuestra p√°gina web: ${COMPANY_INFO.website}\n\nSelecciona una opci√≥n para continuar:\n\n1Ô∏è‚É£ Consultar mi p√≥liza\n2Ô∏è‚É£ Ver ubicaci√≥n de oficinas\n3Ô∏è‚É£ Descargar documento informativo\n4Ô∏è‚É£ Escuchar mensaje de bienvenida\n5Ô∏è‚É£ Video explicativo\n6Ô∏è‚É£ Hablar con un asesor\n7Ô∏è‚É£ Horarios de atenci√≥n`
            }
        });
    } else if (text === "1") {
        data = JSON.stringify({
            messaging_product: "whatsapp",
            to: "528135212365", // numero de telefono local de prueba no es el definitivo
            type: "text",
            text: {
                preview_url: false,
                body: "üìÑ Para consultar tu p√≥liza, por favor proporciona tu n√∫mero de p√≥liza o tu nombre completo. Uno de nuestros asesores te atender√° pronto."
            }
        });
    } else if (text === "2") {
        data = JSON.stringify({
            messaging_product: "whatsapp",
            to: "528135212365", // numero de telefono local de prueba no es el definitivo
            type: "text",
            text: {
                preview_url: false,
                body: "üìç ¬øQu√© oficina deseas ubicar?\n\n‚ú≥Ô∏è Escribe: *oficina musa* o *oficina plaza las vigas*"
            }
        });
    } else if (text.includes("oficina musa")) {
        data = JSON.stringify({
            messaging_product: "whatsapp",
            to: "528135212365", // numero de telefono local de prueba no es el definitivo
            type: "location",
            location: {
                latitude: COMPANY_INFO.offices.musa.latitude,
                longitude: COMPANY_INFO.offices.musa.longitude,
                name: COMPANY_INFO.offices.musa.name,
                address: COMPANY_INFO.offices.musa.address
            }
        });
    } else if (text.includes("oficina plaza las vigas")) {
        data = JSON.stringify({
            messaging_product: "whatsapp",
            to: "528135212365", // numero de telefono local de prueba no es el definitivo
            type: "location",
            location: {
                latitude: COMPANY_INFO.offices.plazaLasVigas.latitude,
                longitude: COMPANY_INFO.offices.plazaLasVigas.longitude,
                name: COMPANY_INFO.offices.plazaLasVigas.name,
                address: COMPANY_INFO.offices.plazaLasVigas.address
            }
        });
    } else if (text === "3") {
        data = JSON.stringify({
            messaging_product: "whatsapp",
            to: "528135212365", // numero de telefono local de prueba no es el definitivo
            type: "document",
            document: {
                link: "https://example.com/documento_informativo.pdf",
                caption: "üìé Informaci√≥n sobre nuestros servicios"
            }
        });
    } else if (text === "4") {
        data = JSON.stringify({
            messaging_product: "whatsapp",
            to: "528135212365", // numero de telefono local de prueba no es el definitivo
            type: "audio",
            audio: {
                link: "https://example.com/audio_bienvenida.mp3"
            }
        });
    } else if (text === "5") {
        data = JSON.stringify({
            messaging_product: "whatsapp",
            to: "528135212365", // numero de telefono local de prueba no es el definitivo
            type: "text",
            text: {
                preview_url: true,
                body: "üé• Mira nuestro video explicativo: https://youtu.be/tu_video_id"
            }
        });
    } else if (text === "6") {
        // Lista simplificada de asesores sin distinguir por oficina
        let advisorList = `üë• *Nuestros asesores disponibles:*\n\n`;
        
        COMPANY_INFO.advisors.forEach((advisor, index) => {
            advisorList += `${index + 1}Ô∏è‚É£ *${advisor.name}*\nüì± ${advisor.phone}\n\n`;
        });
        
        advisorList += `üí¨ Puedes contactar directamente a cualquiera de nuestros asesores haciendo clic en su n√∫mero de tel√©fono.`;
        
        data = JSON.stringify({
            messaging_product: "whatsapp",
            to: "528135212365", // numero de telefono local de prueba no es el definitivo
            type: "text",
            text: {
                preview_url: false,
                body: advisorList
            }
        });
    } else if (text === "7") {
        data = JSON.stringify({
            messaging_product: "whatsapp",
            to: "528135212365", // numero de telefono local de prueba no es el definitivo
            type: "text",
            text: {
                preview_url: false,
                body: `üïí Nuestro horario de atenci√≥n es:\n\nLunes a Jueves: ${COMPANY_INFO.schedule.mondayToThursday}\nViernes: ${COMPANY_INFO.schedule.friday}\n\nüåê Atenci√≥n en l√≠nea ${COMPANY_INFO.schedule.online}\nüìç Estamos ubicados en ${COMPANY_INFO.city}.`
            }
        });
    } else if (text.includes("gracias")) {
        data = JSON.stringify({
            messaging_product: "whatsapp",
            to: "528135212365", // numero de telefono local de prueba no es el definitivo
            type: "text",
            text: {
                preview_url: false,
                body: `üòä ¬°Gracias a ti por contactarnos en *${COMPANY_INFO.name}*! Estamos para servirte.`
            }
        });
    } else if (text.includes("adios") || text.includes("bye") || text.includes("nos vemos")) {
        data = JSON.stringify({
            messaging_product: "whatsapp",
            to: "528135212365", // numero de telefono local de prueba no es el definitivo
            type: "text",
            text: {
                preview_url: false,
                body: `üëã ¬°Hasta luego! Gracias por confiar en *${COMPANY_INFO.name}*.`
            }
        });
    } else if (text === "menu" || text === "men√∫" || text === "0") {
        data = JSON.stringify({
            messaging_product: "whatsapp",
            to: "528135212365", // numero de telefono local de prueba no es el definitivo
            type: "text",
            text: {
                preview_url: false,
                body: "Selecciona una opci√≥n para continuar:\n1Ô∏è‚É£ Consultar mi p√≥liza\n2Ô∏è‚É£ Ver ubicaci√≥n de oficinas\n3Ô∏è‚É£ Descargar documento informativo\n4Ô∏è‚É£ Escuchar mensaje de bienvenida\n5Ô∏è‚É£ Video explicativo\n6Ô∏è‚É£ Hablar con un asesor\n7Ô∏è‚É£ Horarios de atenci√≥n"
            }
        });
    } else {
        data = JSON.stringify({
            messaging_product: "whatsapp",
            to: "528135212365", // numero de telefono local de prueba no es el definitivo
            type: "text",
            text: {
                preview_url: false,
                body: "ü§ñ No entend√≠ tu mensaje. Por favor responde con un n√∫mero del 1 al 7 para recibir informaci√≥n:\n\n1Ô∏è‚É£ Consultar mi p√≥liza\n2Ô∏è‚É£ Ver ubicaci√≥n\n3Ô∏è‚É£ Descargar documento\n4Ô∏è‚É£ Escuchar audio\n5Ô∏è‚É£ Video explicativo\n6Ô∏è‚É£ Hablar con asesor\n7Ô∏è‚É£ Horarios de atenci√≥n"
            }
        });
    }

    // Configuraci√≥n de la petici√≥n HTTP (formato exacto de tu c√≥digo original)
    const options = {
        host: "graph.facebook.com",
        path: `/v22.0/${PHONE_NUMBER_ID}/messages`, // Usamos v22.0 como en tu c√≥digo original
        method: "POST",
        headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${ACCESS_TOKEN}`
        }
    };

    console.log(`Enviando mensaje a ${number}: ${text}`);

    // Realizar la petici√≥n HTTP
    const req = https.request(options, (res) => {
        let responseData = '';
        
        res.on("data", (chunk) => {
            responseData += chunk;
        });
        
        res.on("end", () => {
            if (res.statusCode >= 200 && res.statusCode < 300) {
                console.log(`Mensaje enviado exitosamente: ${responseData}`);
            } else {
                console.error(`Error HTTP ${res.statusCode}: ${responseData}`);
            }
        });
    });

    req.on("error", (error) => {
        console.error('Error en petici√≥n:', error);
    });

    req.write(data);
    req.end();
}

/**
 * FUNCI√ìN PARA COMPATIBILIDAD CON EL CONTROLADOR
 */
const processMessage = (messageText, from) => {
    console.log(`Procesando mensaje de ${from}: ${messageText}`);
    SendWhatsappMessage(messageText, from);
};

// Exportar funciones
module.exports = {
    SendWhatsappMessage,
    processMessage
};